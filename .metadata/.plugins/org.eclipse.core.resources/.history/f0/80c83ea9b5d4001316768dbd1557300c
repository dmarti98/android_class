import model.Note;
import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.sqlite.SQLiteDatabase;
import android.database.sqlite.SQLiteOpenHelper;


public class DBHelper {	

	private static final String TEXT_TYPE = " TEXT";
	private static final String COMMA_SEP = ",";
	private static final String SQL_CREATE_ENTRIES = "CREATE TABLE "
			+ NoteEntry.TABLE_NAME + " (" + NoteEntry.COLUMN_NAME_ENTRY_ID
			+ " INTEGER PRIMARY KEY," + 
			NoteEntry.COLUMN_NAME_TITLE + TEXT_TYPE + COMMA_SEP + 
			NoteEntry.COLUMN_NAME_TEXT + TEXT_TYPE + COMMA_SEP + 		
			" )";

	private static final String SQL_DELETE_ENTRIES = "DROP TABLE IF EXISTS "
			+ NoteEntry.TABLE_NAME;
	
	private Context context;
	NotesDBHelper mDbHelper;
	
	public DBHelper(Context context){
		this.context = context;
		mDbHelper = new NotesDBHelper(context);
	
	}
	
	public long insertNote(String title, String text){
		SQLiteDatabase db = mDbHelper.getWritableDatabase();
		ContentValues cv = new ContentValues();
		cv.put(NoteEntry.COLUMN_NAME_TITLE, title);
		cv.put(NoteEntry.COLUMN_NAME_TEXT, text);
		
		return db.insert(NoteEntry.TABLE_NAME, null, cv);		
	}
	
	public Note getSingleNote(long id){
		
		SQLiteDatabase db = mDbHelper.getReadableDatabase();

		// Define a projection that specifies which columns from the database
		// you will actually use after this query.
		String[] projection = {
		    NoteEntry.COLUMN_NAME_TITLE,
		    NoteEntry.COLUMN_NAME_TEXT
		    };

		String[] args = {String.valueOf(id)};
		
		Cursor c = db.query(
		    NoteEntry.TABLE_NAME,  // The table to query
		    projection,                               // The columns to return
		    "where "+ NoteEntry.COLUMN_NAME_ENTRY_ID + "=?",                                // The columns for the WHERE clause
		    args,                   // The values for the WHERE clause
		    null,                                     // don't group the rows
		    null,                                     // don't filter by row groups
		    sortOrder                                 // The sort order
		    );
		
		return null;
	}
	
	public class NotesDBHelper extends SQLiteOpenHelper{
	    public static final int DATABASE_VERSION = 1;
	    public static final String DATABASE_NAME = "Notes.db";

		public NotesDBHelper(Context context) {
			super(context, DATABASE_NAME, null, DATABASE_VERSION);
			
		}

		@Override
		public void onCreate(SQLiteDatabase db) {
			db.execSQL(SQL_CREATE_ENTRIES);
		}

		@Override
		public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {
			db.execSQL(SQL_DELETE_ENTRIES);
	        onCreate(db);
			
		}
		
		
	}

}
