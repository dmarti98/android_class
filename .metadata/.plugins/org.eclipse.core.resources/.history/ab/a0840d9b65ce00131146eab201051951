import android.app.Activity;
import android.content.Intent;
import android.os.Bundle;
import android.widget.Toast;

import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesClient;
import com.google.android.gms.common.GooglePlayServicesUtil;
import com.google.android.gms.location.LocationClient;

public class Main extends Activity implements
		GooglePlayServicesClient.ConnectionCallbacks,
		GooglePlayServicesClient.OnConnectionFailedListener {

	static final int REQUEST_CODE_RECOVER_PLAY_SERVICES = 1001;
	private LocationClient mLocationClient;

	@Override
	protected void onCreate(Bundle savedInstanceState) {

		/*
		 * Create a new location client, using the enclosing class to handle
		 * callbacks.
		 */
		mLocationClient = new LocationClient(this, this, this);

	}

	@Override
	protected void onStart() {
		super.onStart();
		mLocationClient.connect();
	}


	@Override
	protected void onResume() {
		super.onResume();
		if (checkPlayServices()) {

		} else {
			Toast.makeText(this, "Google Play Services must be installed.",
					Toast.LENGTH_SHORT).show();
			finish();
		}
	}

	@Override
	protected void onStop() {
		// Disconnecting the client invalidates it.
		mLocationClient.disconnect();
		super.onStop();
	}

	private boolean checkPlayServices() {
		int status = GooglePlayServicesUtil.isGooglePlayServicesAvailable(this);
		if (status != ConnectionResult.SUCCESS) {
			if (GooglePlayServicesUtil.isUserRecoverableError(status)) {
				Toast.makeText(this, "Play Services is not installed.",
						Toast.LENGTH_LONG).show();
			} else {
				Toast.makeText(this, "This device is not supported.",
						Toast.LENGTH_LONG).show();
				finish();
			}
			return false;
		}
		return true;
	}

	// Methods to implement GooglePlaySercicesClient.ConnectionCallbacks
	@Override
	public void onConnected(Bundle connectionHint) {

	}

	@Override
	public void onDisconnected() {

	}

	// Methods to implement GooglePlaySercicesClient.OnConnectionFailedListener
	@Override
	public void onConnectionFailed(ConnectionResult result) {

	}

	//

}
